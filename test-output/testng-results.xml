<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="1" passed="0" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-06-28T23:12:08 IST" name="Default suite" finished-at="2024-06-28T23:12:32 IST" duration-ms="23412">
    <groups>
    </groups>
    <test started-at="2024-06-28T23:12:08 IST" name="Default test" finished-at="2024-06-28T23:12:32 IST" duration-ms="23412">
      <class name="agi.qa.airdoctor.tests.LiveIndependenceDayOrderFlowTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:agi.qa.airdoctor.tests.LiveIndependenceDayOrderFlowTest@7f323b3a]" started-at="2024-06-28T23:12:08 IST" name="setup" finished-at="2024-06-28T23:12:18 IST" duration-ms="9812" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="affilatePageSetup()[pri:0, instance:agi.qa.airdoctor.tests.LiveIndependenceDayOrderFlowTest@7f323b3a]" started-at="2024-06-28T23:12:18 IST" name="affilatePageSetup" finished-at="2024-06-28T23:12:18 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- affilatePageSetup -->
        <test-method signature="placeOrder(org.testng.ITestContext, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:agi.qa.airdoctor.tests.LiveIndependenceDayOrderFlowTest@7f323b3a]" started-at="2024-06-28T23:12:18 IST" name="placeOrder" data-provider="getDataFromExcel" finished-at="2024-06-28T23:12:27 IST" duration-ms="8866" status="FAIL">
          <exception class="org.testng.internal.reflect.MethodMatcherException">
            <message>
              <![CDATA[
[public void agi.qa.airdoctor.tests.LiveIndependenceDayOrderFlowTest.placeOrder(org.testng.ITestContext,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.InterruptedException,java.lang.Exception] has no parameters defined but was found to be using a data provider (either explicitly specified or inherited from class level annotation).
Data provider mismatch
Method: placeOrder([Parameter{index=0, type=org.testng.ITestContext, declaredAnnotations=[]}, Parameter{index=1, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=2, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=3, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=4, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=5, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=6, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=7, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=8, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=9, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=10, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=11, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=12, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=13, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=14, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=15, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=16, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=17, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=18, type=java.lang.String, declaredAnnotations=[]}])
Arguments: [(java.lang.String) AD3500 with AD2000,(java.lang.String) 1,(java.lang.String) ,(java.lang.String) ,(java.lang.String) gasftesting2@gmail.com,(java.lang.String) Mridul,(java.lang.String) Vashistha,(java.lang.String) 526 Pine St,(java.lang.String) ,(java.lang.String) Glenwood Springs,(java.lang.String) Colorado,(java.lang.String) 81601,(java.lang.String) 83455666377,(java.lang.String) ,(java.lang.String) $629.00,(java.lang.String) Free Shipping,(java.lang.String) $54.09,(java.lang.String) $683.37,(java.lang.String) $629.00,(java.lang.String) Free Shipping,(java.lang.String) $54.09,(java.lang.String) $683.37]]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.internal.reflect.MethodMatcherException: 
[public void agi.qa.airdoctor.tests.LiveIndependenceDayOrderFlowTest.placeOrder(org.testng.ITestContext,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.InterruptedException,java.lang.Exception] has no parameters defined but was found to be using a data provider (either explicitly specified or inherited from class level annotation).
Data provider mismatch
Method: placeOrder([Parameter{index=0, type=org.testng.ITestContext, declaredAnnotations=[]}, Parameter{index=1, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=2, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=3, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=4, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=5, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=6, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=7, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=8, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=9, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=10, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=11, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=12, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=13, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=14, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=15, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=16, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=17, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=18, type=java.lang.String, declaredAnnotations=[]}])
Arguments: [(java.lang.String) AD3500 with AD2000,(java.lang.String) 1,(java.lang.String) ,(java.lang.String) ,(java.lang.String) gasftesting2@gmail.com,(java.lang.String) Mridul,(java.lang.String) Vashistha,(java.lang.String) 526 Pine St,(java.lang.String) ,(java.lang.String) Glenwood Springs,(java.lang.String) Colorado,(java.lang.String) 81601,(java.lang.String) 83455666377,(java.lang.String) ,(java.lang.String) $629.00,(java.lang.String) Free Shipping,(java.lang.String) $54.09,(java.lang.String) $683.37,(java.lang.String) $629.00,(java.lang.String) Free Shipping,(java.lang.String) $54.09,(java.lang.String) $683.37]
at org.testng.internal.reflect.DataProviderMethodMatcher.getConformingArguments(DataProviderMethodMatcher.java:43)
at org.testng.internal.Parameters.injectParameters(Parameters.java:925)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:34)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.internal.reflect.MethodMatcherException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- placeOrder -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:agi.qa.airdoctor.tests.LiveIndependenceDayOrderFlowTest@7f323b3a]" started-at="2024-06-28T23:12:29 IST" name="tearDown" finished-at="2024-06-28T23:12:32 IST" duration-ms="2761" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- agi.qa.airdoctor.tests.LiveIndependenceDayOrderFlowTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
